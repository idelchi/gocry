// Command gocry provides file encryption and decryption with support for both
// whole-file and line-by-line processing modes. It can be used as a standalone
// tool or integrated with git as a filter for automatic encryption/decryption.
//
// Basic usage:
//
//	gocry [flags] command [flags]
//
// The tool supports reading from stdin and writing to stdout, making it suitable
// for use in git filter pipelines. In line mode, encryption/decryption is guided
// by directives within the file content.
//
// Defaults: deterministic AES-SIV is enabled. Use a 128-hex key (64 bytes).
// For non-deterministic AES-CTR pass --deterministic=false and use a 64-hex key (32 bytes).
package main

import (
	"fmt"
	"os"

	"github.com/idelchi/gocry/internal/parse"
)

// version is the application version injected at build time.
var version = "unknown - unofficial & generated by unknown"

// main is the entry point of the application.
func main() {
	if err := parse.Execute(version); err != nil {
		fmt.Fprintln(os.Stderr, err)

		os.Exit(1)
	}

	os.Exit(0)
}
